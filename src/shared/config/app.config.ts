// Funci√≥n para obtener variables de entorno con valores por defecto seguros
const getEnvVar = (key: string, defaultValue: string, required = false): string => {
  const value = process.env[key];
  if (!value && required) {
    console.warn(`‚ö†Ô∏è  Variable de entorno requerida '${key}' no encontrada. Usando valor por defecto.`);
  }
  return value || defaultValue;
};

// Funci√≥n para obtener n√∫meros de variables de entorno
const getEnvNumber = (key: string, defaultValue: number): number => {
  const value = process.env[key];
  const parsed = value ? parseInt(value, 10) : defaultValue;
  if (value && isNaN(parsed)) {
    console.warn(`‚ö†Ô∏è  Variable '${key}' tiene valor inv√°lido '${value}'. Usando valor por defecto: ${defaultValue}`);
  }
  return parsed;
};

export const appConfig = {
  // Application
  nodeEnv: getEnvVar('NODE_ENV', 'development'),
  port: getEnvNumber('PORT', 3001),
  corsOrigin: getEnvVar('CORS_ORIGIN', '*'),
  
  // JWT
  jwt: {
    secret: getEnvVar('JWT_SECRET', 'your-super-secret-jwt-key-change-in-production'),
    expiresIn: getEnvVar('JWT_EXPIRES_IN', '24h'),
  },
  
  // AWS
  aws: {
    region: getEnvVar('AWS_REGION', 'us-east-1'),
    accessKeyId: getEnvVar('AWS_ACCESS_KEY_ID', ''),
    secretAccessKey: getEnvVar('AWS_SECRET_ACCESS_KEY', ''),
  },
  
  // DynamoDB
  dynamodb: {
    endpoint: process.env.DYNAMODB_ENDPOINT || undefined,
    tablePrefix: getEnvVar('DYNAMODB_TABLE_PREFIX', 'bar_system'),
  },
  
  // Printer
  printer: {
    defaultName: getEnvVar('DEFAULT_PRINTER_NAME', 'Epson_TM-T20'),
    timeout: getEnvNumber('PRINTER_TIMEOUT', 5000),
  },
  
  // File Upload
  upload: {
    maxFileSize: getEnvNumber('MAX_FILE_SIZE', 10485760), // 10MB
    uploadPath: getEnvVar('UPLOAD_PATH', './uploads'),
  },
} as const;

// Validar configuraci√≥n cr√≠tica en producci√≥n
export const validateConfig = () => {
  console.log('üîß Validando configuraci√≥n de la aplicaci√≥n...');
  
  if (appConfig.nodeEnv === 'production') {
    console.log('üè≠ Ejecut√°ndose en modo PRODUCCI√ìN - validando variables cr√≠ticas...');
    
    const requiredVars = [
      { key: 'JWT_SECRET', description: 'Secreto para firmar tokens JWT' },
      { key: 'AWS_ACCESS_KEY_ID', description: 'Access Key de AWS para DynamoDB' },
      { key: 'AWS_SECRET_ACCESS_KEY', description: 'Secret Key de AWS para DynamoDB' },
    ];
    
    const missingVars = requiredVars.filter(({ key }) => !process.env[key] || process.env[key] === '');
    
    if (missingVars.length > 0) {
      console.error('‚ùå ERROR CR√çTICO: Variables de entorno requeridas para producci√≥n:');
      missingVars.forEach(({ key, description }) => {
        console.error(`   - ${key}: ${description}`);
      });
      console.error('üí° Soluci√≥n: Configura estas variables en tu archivo .env o variables de entorno del sistema');
      
      // NO lanzamos error, solo mostramos advertencias para que la app no se detenga
      console.warn('‚ö†Ô∏è  La aplicaci√≥n continuar√° con valores por defecto (NO RECOMENDADO para producci√≥n)');
    }
    
    if (appConfig.jwt.secret === 'your-super-secret-jwt-key-change-in-production') {
      console.error('‚ùå ERROR CR√çTICO: JWT_SECRET debe ser cambiado en producci√≥n');
      console.error('üí° Soluci√≥n: Configura JWT_SECRET con un valor seguro en tu archivo .env');
      console.warn('‚ö†Ô∏è  La aplicaci√≥n continuar√° con el secreto por defecto (INSEGURO para producci√≥n)');
    }
  } else {
    console.log('üîß Ejecut√°ndose en modo DESARROLLO');
    
    // Advertencias para desarrollo
    if (!process.env.AWS_ACCESS_KEY_ID || process.env.AWS_ACCESS_KEY_ID === 'your_access_key_here') {
      console.warn('‚ö†Ô∏è  AWS_ACCESS_KEY_ID no configurado - usando valores por defecto');
    }
    
    if (!process.env.AWS_SECRET_ACCESS_KEY || process.env.AWS_SECRET_ACCESS_KEY === 'your_secret_key_here') {
      console.warn('‚ö†Ô∏è  AWS_SECRET_ACCESS_KEY no configurado - usando valores por defecto');
    }
    
    if (appConfig.jwt.secret === 'your-super-secret-jwt-key-change-in-production') {
      console.warn('‚ö†Ô∏è  JWT_SECRET usando valor por defecto - considera cambiarlo para mayor seguridad');
    }
  }
  
  console.log('‚úÖ Validaci√≥n de configuraci√≥n completada');
  console.log(`üìä Puerto: ${appConfig.port}`);
  console.log(`üåç Entorno: ${appConfig.nodeEnv}`);
  console.log(`üóÑÔ∏è  Regi√≥n AWS: ${appConfig.aws.region}`);
  console.log(`üìã Prefijo tablas: ${appConfig.dynamodb.tablePrefix}`);
};
